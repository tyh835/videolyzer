service: videolyzer

provider:
  name: aws
  stage: dev
  runtime: python3.6
  profile: ${file(../config.${self:provider.stage}.json):profile}
  region: us-west-2
  deploymentBucket:
    name: ${file(../config.${self:provider.stage}.json):deployment_bucket}
    serverSideEncryption: AES256

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - rekognition:*
      Resource: "*"
    - Effect: "Allow"
      Action:
        - s3:GetObject
      Resource:
        - !Join ['', ['${self:custom.videosBucketArn}', '/*']]
    - Effect: "Allow"
      Action:
        - iam:GetRole
        - iam:PassRole
      Resource:
        !GetAtt [RekognitionSNSPublishRole, Arn]
    - Effect: "Allow"
      Action:
        - dynamodb:PutItem
      Resource:
        !GetAtt [VideosTable, Arn]

  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.videosTableName}
    REKOGNITION_SNS_TOPIC_ARN: ${self:custom.rekognitionSNSTopicArn}
    REKOGNITION_ROLE_ARN:
      !GetAtt [RekognitionSNSPublishRole, Arn]

functions:
  start-video-processing:
    handler: start_processing.handler
    events:
      - s3:
          bucket: ${self:custom.videosBucketName}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .mp4
  handle-label-detection:
    handler: label_detection.handler
    events:
      - sns: LabelDetectionTopic

resources:
  Resources:
    VideosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: videoName
            AttributeType: S
        KeySchema:
          - AttributeName: videoName
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.videosTableName}

    RekognitionSNSPublishRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - rekognition.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: RekognitionSNSPublishPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - sns:Publish
                  Resource: ${self:custom.rekognitionSNSTopicArn}

custom:
  videosBucketName: ${file(../config.${self:provider.stage}.json):videolyzer.videos_bucket}
  videosTableName: ${file(../config.${self:provider.stage}.json):videolyzer.videos_table}

  videosBucketArn: !Join [
    ':',
    [
      arn,
      aws,
      s3,
      '',
      '',
      '${self:custom.videosBucketName}'
    ]
  ]

  rekognitionSNSTopicArn: !Join [
    ':',
    [
      arn,
      aws,
      sns,
      !Ref AWS::Region,
      !Ref AWS::AccountId,
      LabelDetectionTopic
    ]
  ]